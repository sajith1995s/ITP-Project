<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClear.Iconimage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAztJREFUaEPt
        mTlrFVEYhqOiYpNEUNDEtRDFpXJJbDSIrYX7EpdKkhh3Cxv/gf4DKxUVrLQR7KzURNPYuOGGCG64EVHc
        xued+x0Z0BvvmTkz9wrzwNuc5f2+l8zMnTNpKikpaUyiKJqLrqBX6CZabVP/DzTdiT6gJD9Rry1pfGi2
        A71X539BYXpsaeNCk8tQtRCOH2iXbWk8aG4p+lcIh8LstK2NA00tQe/UoQff0Q6zqD80sxj5hnA0Rhia
        UIi36igDCrPdLIuH4ouQfiNCoDDdZl0cFF2IQoVwKMw2K5E/FFuAXqpyDijMViuVHxTJM4Qj3zCYz0cv
        VKkAFGaLlQ4HprPRU1UokC+o01rIDmYz0WM514Fr1kY2MJqBHsWW9WHYWkkPJtPRw9guigaRzhRFM2Tt
        pAODaehBbFUJ0Iqa0VUNFMQ3tMpa8ofNyRv7Omq2Kc2NQxc0kTNf0Vor6w+bZyEX4gb6HcLB2Bh0Ugty
        QiHWWTl/2KwQT+QEA6jFpv6AuVHouBYGRiHWWxl/2NyO3D0xYogkrDsa7wiD7okNZu0PmxXivpxAT6dW
        m6oJ1u9BOvFlIXOINuRCxE8nm/KCfd1Il0UaFGKjWfnDZoW4Jye4hVKFcLB/DfosMw8UYpNZ+MPmqeiu
        nOA2mmRTmcCnC32UaQ1kDjEF3ZETKMRkmwoCfvoQ8VrmI6C32822xR82t6AhOYEuqzabCgq+OstXO0Fm
        /0iHgfsh06O23YZzAf956JmKJVCIPluSHkzcF485NpQr1NERwB3GFKLfprKB0fPYMsvLmAfU2YsUQNpn
        w9nB7BgS+lK+3IZzAX/9UCqAOGDDYcBQL3znY+vKd9oOmwoKvj3IhThsw2HBeDQ6FZeIok+oy6aCgN9+
        5C6n3TacDxTQX+Y0EsNopU1lAp/kPRH2cqoGhRTmDBIKs8KmUsH+fuQup4M2XAwUVJizcenKAyDV5xf2
        JW/sQzZcLBRWmHNxCynCsL4PuRD53Ni1QgOpnmas60UuxBEbri80Mh5djluKojdI/9ScaNLhSx8lktIj
        Vi9/4gRya71lLYQD07HoIiqaAWshHJhOQJdi++IYtPIlJSWpaGr6BXO/FRy1ijN4AAAAAElFTkSuQmCC
</value>
  </data>
</root>